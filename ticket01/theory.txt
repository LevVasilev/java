Билет №1
-----ЗАДАНИЕ 1------
Парадигма объектно-ориентированного программирование.
Основные принципы ООП и их реализация в языке программирования Java и С++
--------------------
ООП - парадигма разработки ПО, в которой программа представляется в виде совокупности объектов.
Основные принципы:

	Инкапсуляция
		базовый принцип ООП, при котором атрибуты и поведение объекта объединяются в одном классе, внутренняя реализация объекта скрывается от пользователя, а для работы с объектом предоставляется открытый интерфейс.

	Полиморфизм
		Механизм, позволяющий коду работать с разными типами данных. Бывает параметрический полиморфизм, когда один и тот же код используется для разных допустимых типов аргументов и ad-hoc полиморфизм, подразумевающий выполнение разного кода для разных типов данных, пусть и вызываемого единообразно

	Наследование
		Принцип, позволяющий объектам наследовать данные и функциональность у уже существующих типов.
Эти принципы реализуются в С++ следующим образом:
	Объекты задаются ключевым словом class, structure
	Допустимо множественное наследование
	Есть абстрактные классы и виртуальные функции, подразумевающие наследование и переопределение
	Ключевые слова private, protected и public управляют доступом
В Java:
	Объекты задаются ключевым словом class и interface
	Ключевые слова private, protected, publiс, default управляют доступом
	Нет множественного наследования, но класс может реализовывать сколько угодно интерфейсов
	Абстрактные классы и виртуальные функции также есть
	Есть интерфейсы - абстрактные типы данных, указывающие поведение, которое необходимо реализовать классам


-----ЗАДАНИЕ 2------
Понятие структуры данных список.
Линейный список.
Виды списков и их реализация на Java.
Доступ к элементу структуры данных список.
Использование списков.
Трудоемкость операций со списками.
--------------------
Список – это динамическая линейная структура данных, в которой каждый элемент ссылается либо только на предыдущий – однонаправленный линейный список, либо на предыдущий и следующий за ним – двунаправленный линейный список.
ArrayList — реализация изменяемого массива интерфейса List, часть Collection Framework, который отвечает за список (или динамический массив), расположенный в пакете java.utils.
В основе ArrayList лежит идея динамического массива. А именно, возможность добавлять и удалять элементы, при этом будет увеличиваться или уменьшаться по мере необходимости.
ArrayList хранит только ссылочные типы, любые объекты, включая сторонние классы. Строки, потоки вывода, другие коллекции. Для хранения примитивных типов данных используются классы-обертки.
ArrayList следует использовать, когда в приоритете доступ по индексу, так как эти операции выполняются за константное время. Добавление в конец списка в среднем тоже выполняется за константное время. Кроме того в ArrayList нет дополнительных расходов на хранение связки между элементами. Минусы в скорости вставки/удаления элементов находящихся не в конце списка, так как при этой операции все элементы правее добавляемого/удаляемого сдвигаются

