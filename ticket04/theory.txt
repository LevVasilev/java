Билет №4
-----ЗАДАНИЕ 1------
Понятие класса.
Определение, инициализация.
Модификаторый доступа.
Константы и переменные.
Объявление классов.
--------------------

Класс в Java — это шаблон для создания объекта, а объект - это экземпляр класса. Класс определяет структуру и поведение, которые будут совместно использоваться набором объектов. Класс содержит переменные и методы, которые называются элементами класса, членами класса. Он составляет основу инкапсуляции в Java. Каждый объект данного класса содержит структуру и поведение, которые определены классом. Иногда объекты называют экземплярами класса.
Методы используются для описания того, что объект класса умеет делать или что можно с ним сделать. Переменные - для описания свойств или характеристик объекта.
Объявление класса
После ключевого слова class пишется имя класса. В теле класса объявляются переменные и методы класса. Их может быть сколько угодно.

class Имя_Класса{
    тип переменнаяЭкземпляра1;
    тип переменнаяЭкземпляра2;
    // ...
    тип переменнаяЭкземпляраN;

    тип имяМетода 1 ( список параметров) {
        // тело метода
    }

    тип имяМетода2 (список параметров) {
        // тело метода
    }
…
    тип имяМетодаN (список параметров ) {
        // тело метода
    }
}

Инициализация (от англ. initialization, инициирование) — создание, активация, подготовка к работе, определение параметров.
Приведение программы или устройства в состояние готовности к использованию. С точки зрения Java — выделение памяти под объект, например при создании MyClass myClass = new MyClass().
Таким образом будет выделена память под объект myClass (он будет инициализирован).
Инстанцирование (англ. instantiation) — создание экземпляра класса. В отличие от слова «создание», применяется не к объекту, а к классу. То есть, говорят: «(в виртуальной среде) создать экземпляр класса или инстанцировать класс». Порождающие шаблоны используют полиморфное инстанцирование.

Модификаторы доступа — это чаще всего ключевые слова, которые регулируют уровень доступа к разным частям твоего кода. Почему «чаще всего»? Потому что один из них установлен по умолчанию и не обозначается ключевым словом
Всего в Java есть четыре модификатора доступа.
Конструкция:
ClassName ObjectName = new classConstructor();
Закрытый - private - свой класс
Защищенный - protected - свой класс, свой пакет, Класс-наследник
Открытый - public - свой класс, свой пакет, класс-наследник, все классы
Пакет - default - свой класс, свой пакет

Константы и переменные
Для хранения данных в программе предназначены переменные. Переменная представляет именованную область памяти, которая хранит значение определенного типа. Каждая переменная имеет тип, имя и значение. Тип определяет, какую информацию может хранить переменная или диапазон допустимых значений.
Также можно присвоить значение переменной при ее объявлении. Этот процесс называется инициализацией.
Кроме переменных, в Java для хранения данных можно использовать константы. В отличие от переменных константам можно присвоить значение только один раз. Константа объявляется также, как и переменная, только вначале идет ключевое слово final.

-----ЗАДАНИЕ 2------
Понятие поиска в массивах.
Последовательный поиск.
Сортировка методом прямого выбора.
Использование ООП для програмирования алгоритмов поиска в массивах и коллекциях.
--------------------

Поиск является видом обработки данных в массиве с целью определения и выявления элемента, который соответствует заданным критериям.

Линейный или последовательный поиск – простейший алгоритм поиска. Он редко используется из-за своей неэффективности.
По сути, это метод полного перебора, и он уступает другим алгоритмам.
У линейного поиска нет предварительных условий к состоянию структуры данных. Алгоритм ищет элемент в заданной структуре данных, пока не достигнет конца структуры.
При нахождении элемента возвращается его позиция в структуре данных. Если элемент не найден, возвращаем -1.

Прямой выбор основан на следующих правилах:
Выбирается элемент с наименьшим ключом.
Он меняется местами с первым элементом a1
Затем этот процесс повторяется с оставшимися n-1 элементами, n-2 элементами и т.д. до тех пор, пока не не останется один, самый большой элемент.
