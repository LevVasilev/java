Билет №7
-----ЗАДАНИЕ 1------
Переопределение методов в Java, абстрактные методы.
--------------------

Переопредление методов в Java, абстрактные методы.

Переопределение метода (англ. Method overriding) в объектно-ориентированном программировании — одна из возможностей языка программирования, позволяющая подклассу или дочернему классу обеспечивать специфическую реализацию метода с той же сигнатурой (имя, плюс номер и тип его параметров), уже реализованного в одном из суперклассов или родительских классов.

Перед переопределяемым методом указывается аннотация @Override. Данная аннотация в принципе не обязательна.
При переопределении метода он должен иметь уровень доступа не меньше, чем уровень доступа в базовом класса. Например, если в базовом классе метод имеет модификатор public, то и в производном классе метод должен иметь модификатор public.


Абстрактные методы -- это методы только с сигнатурой/без тела.
Методы интерфейса неявно абстрактны и требуют конкретной реализации класса, если не приведена дефолтная реализация.

Абстрактные методы в абстрактных классах должны быть явно объявлены как абстрактные и перепоределены в неабстрактном потомке.

-----ЗАДАНИЕ 2------
Иерархия классов ввода вывода.
Работа с файлами в Java.
Работа с файлами.
Сериализация объектов.
--------------------

Иерархия потоков ввода вывода.
Reader<-FilterReader<-PushBackReader
Reader<-StringReader
Reader<-PipedReader
Reader<-CharArrayReader
Reader<-InputStreamReader<-FileReader
Reader<-LineNumberReader
Reader<-BufferedReader
С Writer тоже самое, только замени слово Reader на writer


Работа с файлами Java:
В отличие от большинства классов ввода/вывода, класс File работает не с потоками, а непосредственно с файлами. Данный класс позволяет получить информацию о файле: права доступа, время и дата создания, путь к каталогу. А также осуществлять навигацию по иерархиям подкаталогов.
Класс java.io.File может представлять имя определённого файла, а также имена группы файлов, находящихся в каталоге. Если класс представляет каталог, то его метод list() возвращает массив строк с именами всех файлов.


Сериализация
Сериализация (Serialization) — это процесс, который переводит объект в последовательность байтов или строку, по которой затем его можно полностью восстановить. Зачем это нужно? Дело в том, при обычном выполнении программы максимальный срок жизни любого объекта известен — от запуска программы до ее окончания. Сериализация позволяет расширить эти рамки и «дать жизнь» объекту также между запусками программы


