Билет №9
-----ЗАДАНИЕ 1------
Статические поля и методы.
Класс Math, его основные методы.
--------------------

1. Статические поля и методы. Класс Math, его основные методы.
Модификатор static (постоянный) делает переменную или метод независимым от объекта класса.
1) Методы с модификатором public static можно вызывать без создания объекта класса. К статическому
 и обычному методу можно обращаться через объекты класса, но через класс (без объекта) можно обращаться только к статическому методу.
2) Статические методы нельзя переопределить в классах наследниках. Такой метод един и для текущего класса и для всех его наследников.
3) Статические методы могут работать только со статическими методами или полями. Так как статические методы работают без создания объектов,
а если в этих методах попытаться обратиться к нестатическому полю, то будет ошибка, так как объект не создавался, соответственно
 и поля тоже не существует. (Но через нестатические методы можно обращаться к статическим методам и полям)

Класс Math располагается в пакете java.lang и предоставляет набор статических методов для осуществления ряда различных математических вычислений.
Методы реализованы как static, поэтому можно сразу вызывать через Math.methodName() без создания экземпляра класса.
Ниже приведены примеры вычислений, для которых класс Math может оказаться полезным:
Вычисление абсолютных значений Math.abs(-1)
Вычисление значений тригонометрических функций Math.sin(Math.toRadians(30))
Возведение в различные степени Math.pow(3,2) //9
Извлечение корней различных степеней Math.cbrt(125) //5
Генерация случайных чисел Math.random() - от 0.0 до 1.0

Округления
Метод round - округляет так, как привычно обывателю. Если дробная часть числа больше либо равна 0.5, то число будет округлено
в большую сторону, иначе в меньшую.
Метод floor всегда, независимо от значений дробной части, округляет число в меньшую сторону (в сторону отрицательной бесконечности).
Метод ceil, напротив, вне зависимости от значений дробной части, округляет числа в большую сторону (в сторону положительной бесконечности).

-----ЗАДАНИЕ 2------
Обобщённое програмирование.
Понятие и использование джеенериков в Java
--------------------

Обобщенное программирование. Понятие и использование дженериков в Джава.
В JDK введены так называемые обобщенные или параметризованные типы – generics или по-другому обобщенные типы.
Использование параметризации позволяет создавать классы, интерфейсы и методы, в которых тип обрабатываемых данных задается как параметр.
Дженерики или обобщенные типы позволяют вам абстрагироваться от использования конкретных типов.
Например:
<E> для элемента коллекции;
<T> для обобщенного типа;
<K, V> ключ и значение.
<N> для чисел
S, U, V, и т.д. для второго, третьего, четвертого типа параметра
Обобщённые методы или дженерики позволяют работать с различными типами данных без изменения их описания, одно из назначений этих методов —
более сильная проверка типов во время компиляции и устранение необходимости явного приведения. Создаётся более безопасный и легко читаемый код,
который не перегружен переменными типа Object и приведением классов.

Обобщенное программирование - использование дженериков в программах
