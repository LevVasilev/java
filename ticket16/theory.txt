Билет №16
-----ЗАДАНИЕ 1------
Работа со строками в Java, строковый хэш.
Операция контакенации строк.
--------------------

Работа со строками в Java, строковый кеш. Операция конкатенации строк.
Объекты String являются неизменяемыми, поэтому все операции, которые изменяют строки, фактически приводят к созданию новой строки, что сказывается на производительности приложения.
 Для решения этой проблемы, чтобы работа со строками проходила с меньшими издержками в Java были добавлены классы StringBuffer и StringBuilder.
По сути они напоминают расширяемую строку, которую можно изменять без ущерба для производительности.

Эти классы похожи, практически двойники, они имеют одинаковые конструкторы, одни и те же методы, которые одинаково используются.
Единственное их различие состоит в том, что класс StringBuffer синхронизированный и потокобезопасный.
То есть класс StringBuffer удобнее использовать в многопоточных приложениях, где объект данного класса может меняться в различных потоках.
Если же речь о многопоточных приложениях не идет, то лучше использовать класс StringBuilder, который не потокобезопасный, но при этом работает быстрее,
 чем StringBuffer в однопоточных приложениях.

Конкатенация строк (сцепление) — это операция объединения строк. Для этой операции в Java используется знак + .
 К строке можно присоединять не только другую строку, но и значение любого другого типа, которое будет преобразовано к строке автоматически.
В классах StringBuffer и StringBuilder операция конкатенации происходить при помощи append()
Пример:
StringBuffer str = new StringBuffer("Hello");
str.append(" World");

-----ЗАДАНИЕ 2------
Возможности Java Framework Collections.
Контейнер HashSet и его основные методы.
--------------------

Возможности Java Framework Collection. Контейнер HashSet и его основные методы.
Java Collection Framework — иерархия интерфейсов и их реализаций, которая является частью JDK и позволяет разработчику пользоваться большим количеством структур данных из «коробки».

На вершине иерархии в Java Collection Framework располагаются 2 интерфейса: Collection и Map. Эти интерфейсы разделяют все коллекции,
входящие во фреймворк на две части по типу хранения данных: простые последовательные наборы элементов и наборы пар «ключ — значение» (словари).

от Collection: List, Queue, Set (это все интерфейсы). Collection — этот интерфейс находится в составе JDK c версии 1.2 и определяет основные методы работы
с простыми наборами элементов, которые будут общими для всех его реализаций (например size(), isEmpty(), add(E e) и др.).

Обобщенный класс HashSet представляет хеш-таблицу. Он наследует свой функционал от класса AbstractSet , а также реализует интерфейс Set .
Хеш-таблица представляет такую структуру данных, в которой все объекты имеют уникальный ключ или хеш-код. Данный ключ позволяет уникально идентифицировать объект в таблице.
Название Hash происходит от понятия хэш-функция. Хэш-функция — это функция, сужающая множество значений объекта до некоторого подмножества целых чисел.
Класс Object имеет метод hashCode(), который используется классом HashSet для эффективного размещения объектов, заносимых в коллекцию. В классах объектов,
заносимых в HashSet, этот метод должен быть переопределен (override).

Методы:
public Iterator iterator() - возвращает итератор - то есть объект, реализующий интерфейс Iterator.
public int size()
public boolean isEmpty()
public boolean contains(Object o)
public boolean add(Object o)
public boolean addAll(Collection c)
public Object[] toArray()
public boolean remove(Object o)
public boolean removeAll(Collection c)
public boolean retainAll(Collection c) - (retain — сохранить). Выполняет операцию "пересечение множеств".
public void clear()
public Object clone()

